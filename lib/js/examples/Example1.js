// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var BenchmarkJs = require("../src/BenchmarkJs.js");

function copyList(_from, _acc) {
  while(true) {
    var acc = _acc;
    var from = _from;
    if (!from) {
      return acc;
    }
    _acc = {
      hd: from.hd,
      tl: acc
    };
    _from = from.tl;
    continue ;
  };
}

var init = BenchmarkJs.Benchmark.defaultConfig;

var benchmark = BenchmarkJs.Benchmark.make({
      async: init.async,
      delay: init.delay,
      initCount: init.initCount,
      maxTime: init.maxTime,
      minSamples: init.minSamples,
      minTime: init.minTime,
      onAbort: init.onAbort,
      onComplete: (function (param) {
          console.log("-- Done --\r\n");
          
        }),
      onCycle: init.onCycle,
      onError: (function (evt) {
          console.log(evt);
          
        }),
      onReset: init.onReset,
      onStart: (function (param) {
          console.log("-- Running Benchmarks --\r\n");
          
        }),
      setup: init.setup,
      teardown: init.teardown
    }, "List Copy", (function () {
        var listRef = /* [] */0;
        var $$var = /* [] */0;
        for(var i = 1; i <= 1000; ++i){
          $$var = {
            hd: i,
            tl: $$var
          };
        }
        var source = $$var;
        listRef = copyList(source, /* [] */0);
        
      }));

var result = benchmark.run();

console.log("Times:", result.times);

console.log("Stats:", result.stats);

exports.copyList = copyList;
exports.result = result;
/* benchmark Not a pure module */
